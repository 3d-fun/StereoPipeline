************************************************************************
1. INTRODUCTION

A. Neo-Geography Toolkit

The Neo-Geography Toolkit (NGT) is a collection of tools for automated
processing of geospatial data, including images and maps. It is capable of
processing raw raster data from remote sensing instruments and transforming it
into useful cartographic products, such as visible image base maps, topographic
models, etc. Additionally, components of the NGT can perform data processing on
extremely large geospatial data sets (up to several tens of terabytes) via
parallel processing pipelines. Finally, it can also transform raw metadata (i.e.
SPICE kernels and PDS image labels), vector data (e.g., 2D/3D shape files), and
geo-tagged data sets into standard NeoGeography data formats, such as KML.

NGT is an evolving collection of loosely connected open-source modules designed
by the NASA Ames Intelligent Robotics Group. Modules of the NGT will be released
one at a time, as they reach maturity. To date, we have completed only one
module: the NASA Ames Stereo Pipeline, but more will soon follow. Check this
website for the latest updates.

B. Stereo Pipeline

The NASA Ames Stereo Pipeline (ASP) is a suite of automated geodesy &
stereogrammetry tools designed for processing planetary imagery captured from
orbiting and landed robotic explorers on other planets. It was designed to
process stereo imagery captured by NASA spacecraft and produce cartographic
products including digital elevation models (DEMs), ortho-projected imagery, and
3D models. These data products are suitable for science analysis, mission
planning, and public outreach.

This version of the Stereo Pipeline is designed as an add-on to an existing
installation of the USGS Integrated Software for Imagers and Spectrometers
(ISIS). ISIS is widely used in the planetary science community for processing
raw spacecraft imagery into high level data products of scientific interest such
as map projected and mosaicked imagery.

************************************************************************
2. LICENSE (see COPYING for the full text)

A. Copyright and License Summary

Copyright (C) 2006-2009 United States Government as represented by the
Administrator of the National Aeronautics and Space Administration
(NASA).  All Rights Reserved.

This software is distributed under the NASA Open Source Agreement
(NOSA), version 1.3.  The NOSA has been approved by the Open Source
Initiative.  See the file "COPYING" at the top of the distribution
directory tree for the complete NOSA document.

THE SUBJECT SOFTWARE IS PROVIDED "AS IS" WITHOUT ANY WARRANTY OF ANY
KIND, EITHER EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT
LIMITED TO, ANY WARRANTY THAT THE SUBJECT SOFTWARE WILL CONFORM TO
SPECIFICATIONS, ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
A PARTICULAR PURPOSE, OR FREEDOM FROM INFRINGEMENT, ANY WARRANTY THAT
THE SUBJECT SOFTWARE WILL BE ERROR FREE, OR ANY WARRANTY THAT
DOCUMENTATION, IF PROVIDED, WILL CONFORM TO THE SUBJECT SOFTWARE.

B. Third-Party Libraries

This distribution may include some bundled third-party software as a
convenience to the user.  This software, located in the "thirdparty/"
directory, is not covered by the above-mentioned distribution
agreement or copyright.  See the included documentation for detailed
copyright and license information for any third-party software.  In
addition, various pieces of the NGT depend on additional
third-party libraries that the user is expected to have installed.
Information of where to obtain non-bundled third-party libraries is
provided in section 3, "INSTALLATION".

************************************************************************
3. INSTALLATION AND USE

A. Obtaining the Software

If you are reading this text then presumably you have a copy of
the software.  However, you can obtain the most recent version from

  http://ti.arc.nasa.gov/project/ngt

Before attempting to configure, build or install the NGT
you should obtain and install any prerequisite libraries that you
need.  The only absolute requirement is the Boost.  The others are
either required to build a specific module, or will enable a
particular feature if available.  A complete list of dependencies
is shown in the table below, where each library is noted as being
either a required or optional dependency of one or modules.  All of
these libraries are distributed under some variation on the themes
of the MIT and BSD licenses.  See each individual library's
documentation for details.

+------------------+-------------+-----------------------------------------+
| Library          | Required?   | Source Website                          |
+------------------+-------------+-----------------------------------------+
| Vision Workbench | Required    | http://ti.arc.nasa.gov/visionworkbench/ |
| Boost            | Required    | http://www.boost.org/                   |
| ISIS             | Recommended | http://isis.astrogeology.usgs.gov/      |
| OpenSceneGraph   | Optional    | http://www.openscenegraph.org/          |
+------------------+-------------+-----------------------------------------+


B. Building and Installing

Once you have obtained and installed all of the prerequisite software
the process of building the NGT itself is generally
straightforward.  There are four steps:

i. Configure the library.  This is usually as simple as running the
"./configure" script from within the root NGT package directory.

ii. Build the tools by running "make".

iii. Install the tools by running "make install".

While this simple sequence will suffice for most users, the configure
script has many options that you can use to adjust various properties,
such as compiler optimization flags or the search paths used to find
required libraries.  See the "INSTALL" file in this directory for more
detailed information.

C. Using the Library

When you install the library it will place files into three
subdirectories in the installation location.  The header files which
you will need to develop software using the library are located in the
"include/" subdirectory.  The compiled libraries, which you will need
to link your software against, are located in the "lib/" subdirectory.
You will need to configure your software development environment as
appropriate to locate these files.  Finally, a number of command-line
tools are provided in the "bin/" directory.  See the documentation for a
complete list of the tools.

************************************************************************
4. DOCUMENTATION

The primary source of documentation is the Stereo Pipeline Book, which
is provided in source form along with this distribution.  It includes a
gentle introduction to using the Stereo Pipeline, as well as
documentation for each of its major processes.  A copy of this document
in PDF format should be available from wherever you obtained this
package.  The original source for this document can be found in
"docs/book" and it can be built by running "make" in that directory.
This operation requires the latex typesetting package.

************************************************************************
5. CONTACTS & CREDITS

A. Mailing List

All bugs, feature requests, and general discussion should be sent to
the NGT user mailing list:

  stereo-pipeline@lists.nasa.gov

To subscribe to this list, send an empty email messoge with the subject
'subscribe' (without the quotes) to

  stereo-pipeline@lists.nasa.gov

To contact the lead developers and project manager directly, send mail
to:

  stereo-pipeline@lists.nasa.gov

Please do NOT use this second list for technical inquiries, which
should all be sent to the main stereo-pipeline list above.

B. Credits

The NGT was developed within the Autonomous Systems and
Robotics area of the Inteligent Systems Division at NASA's Ames
Research Center.  It leverages the Intelligent Robotics Group's (IRG)
extensive experience developing surface reconstruction and tools for
planetary exploration---e.g. the Mars Pathfinder and Mars Exploration
Rover missions---and rover autonomy.  It has also been developed in
collaboration with the Adaptive Control and Evolvable Systems (ACES)
group, and draws on their experience developing computer vision
techniques for autonomous vehicle control systems.

See the AUTHORS file for a complete list of developers.
